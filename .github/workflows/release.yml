name: Release

# Triggered through GitHub CLI
on:
  workflow_dispatch:
    inputs:
      message:
        description: 'Commit Message'
        required: true

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  npm:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
      id-token: write
    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get current branch
        id: branch
        run: echo "Current branch is ${{ github.ref }}"
      - name: Build
        uses: ./.github/actions/build
        with:
          node-version: ${{ matrix.node-version }}
      - name: Git Status
        run: git status
      - name: Stash changes
        run: git stash
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # The pull request title.
          title: 'chore: release'
          # The command to update version, edit CHANGELOG, read and delete changesets.
          version: 'pnpm changeset version'
          # The commit message to use.
          commit: 'chore: version packages'
          # The command to use to build and publish packages
          publish: 'pnpm -r publish --access public'
        env:
          # https://github.com/settings/tokens/new
          # Expiration: No expiration
          # Select: repo.*
          GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          # https://www.npmjs.com/settings/YOUR_ACCOUNT_HANDLE/tokens/granular-access-tokens/new
          # Custom Expiration: 01-01-2100
          # Permissions: Read and Write
          # Select packages: @scalar
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  todesktop:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build
        uses: ./.github/actions/build
        with:
          node-version: ${{ matrix.node-version }}
      - name: Git Status
        run: git status
      - name: Stash changes
        run: git stash
      - if: startsWith('${{ github.event.inputs.message }}', 'RELEASING:')
        name: Check which files were touched
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files_yaml: |
            api_client_app:
              - packages/api-client-app/package.json
      - if: steps.changed-files.outputs.api_client_app_any_changed == 'true'
        name: Check whether scalar-api-client was published
        run: echo "âœ… A new version of scalar-api-client was published."
